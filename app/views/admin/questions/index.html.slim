= render 'admin/shared/head', title: t('activemodel.models.question')

.nav.navbar.navbar-default
  = form_for [:admin, @search], url: admin_questions_path, method: :get, html: { class: 'navbar-form navbar-left unvisible' } do |f|
    .form-group
      = f.label :title
      = f.text_field :title, class: 'form-control'

    .form-group
      - attributes = { class: 'js-select-ize _textbooks-class', multiple: true, data: { placeholder: 'Выберите статус' } }
      = f.select :states, Qa::Question.states_for_select, { include_blank: true }, attributes

    .form-group
      - attributes = { class: 'form-control', placeholder: 'Выберите статус' }
      = f.select :user_type, QuestionFilter.user_types, { include_blank: true }, attributes

    = f.submit t('label.search'), class: 'btn btn-default'

    .nav-checkbox-line
      .form-group
        = f.check_box :without_answers
        = f.label :without_answers

      .form-group
        = f.check_box :without_best_answer
        = f.label :without_best_answer

      .form-group
        = f.check_box :only_interesting_questions
        = f.label :only_interesting_questions

      .form-group
        = f.check_box :with_complaints
        = f.label :with_complaints

table.table.table-hover
  thead.text-center
    tr
      th = qa_sort_link('questions.id')
      th = I18n.t(:title, scope: 'activemodel.attributes.qa/question')
      th = qa_sort_link(:state)
      th = Redirect.model_name.human
      th.nowrap = qa_sort_link('questions.updated_at')
      th.nowrap = qa_sort_link('questions.created_at')

  tbody.middle-vertical-align
    - questions.each do |question|
      tr
        td.ids.text-center = question.id
        td = link_to question.safe_title, edit_admin_question_path(question)
        td.nowrap.text-center
          - klass = question.state.fresh? ? 'purple' : 'default'
          label.label class="label-#{klass}" = question.human_state_name
        - klass = question.redirect ? 'fa-check-circle color-green' : 'fa-times-circle'
        td.text-center: i.fa class=klass aria-hidden="true"
        td.nowrap.date.text-center = question.human_updated_at
        td.nowrap.date.text-center = question.human_created_at

.text-center
  = will_paginate(@questions, renderer: BootstrapPagination::Rails, param_name: 'page[number]')
