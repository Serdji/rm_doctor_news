= render 'admin/shared/head', title: t('activemodel.models.answer')

.nav.navbar.navbar-default
  = form_for [:admin, @search], url: admin_answers_path, method: :get, html: { class: 'navbar-form navbar-left unvisible' } do |f|
    .form-group
      - attributes = { class: 'js-select-ize _textbooks-class', multiple: true, data: { placeholder: 'Выберите статус' } }
      = f.select :states, Qa::Answer.states_for_select, { include_blank: true }, attributes

    .form-group
      - attributes = { class: 'js-select-ize _textbooks-class', data: { placeholder: 'Выберите вопрос' } }
      - question_id = params.dig(:answer_filter, :question_id)
      - options = options_for_select(Qa::Question.options_for_select(question_id), question_id)
      = f.select :question_id, options, { include_blank: true }, attributes

    .form-group
      - attributes = { class: 'form-control', placeholder: 'Выберите статус' }
      = f.select :user_type, AnswerFilter.user_types, { include_blank: true }, attributes

    = f.submit t('label.search'), class: 'btn btn-default'

    .nav-checkbox-line
      .form-group
        = f.check_box :with_complaints
        = f.label :with_complaints

      .form-group
        = f.check_box :without_best_answer
        = f.label :without_best_answer

table.table.table-hover
  thead.text-center
    tr
      th.nowrap = qa_sort_link('answers.id')
      th.nowrap = Qa::Answer.human_attribute_name(:body)
      th.nowrap = qa_sort_link(:state)
      th.nowrap = qa_sort_link('answers.updated_at')
      th.nowrap = qa_sort_link('answers.created_at')

  tbody.middle-vertical-align
    - answers.each do |answer|
      tr
        td.ids.text-center = answer.id
        td = link_to answer.safe_title, edit_admin_answer_path(answer)
        td.text-center
          - klass = answer.state.fresh? ? 'purple' : 'default'
          label.label class="label-#{klass}" = answer.human_state_name
        td.nowrap.date.text-center = answer.human_updated_at
        td.nowrap.date.text-center = answer.human_created_at

.text-center
  = will_paginate(@answers, renderer: BootstrapPagination::Rails, param_name: 'page[number]')
