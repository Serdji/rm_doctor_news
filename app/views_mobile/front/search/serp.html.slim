.js-two-ads
.search-page
  .search-page__item
    .search-page__title = "Результаты поиска по запросу «#{params[:query]}»"

    a.search-page__subtitle class=('active' if questions_active?) href=search_serp_path(type: 'questions', query: params[:query])
      span.search-page__subtitle-text Вопросы
      span.search-page__counter = "(#{@search_result.questions_found})"

    a.search-page__subtitle class=('active' if tags_active?) href=search_serp_path(type: 'tags', query: params[:query])
      span.search-page__subtitle-text Темы
      span.search-page__counter = "(#{@search_result.tags_found})"

  - if @search_result.empty?
    .search-page__null-result
      = svg name: 'search-null-result', klass: 'search-page__null-result-image'
      - type_name = tags_active? ? 'Темы' : 'Вопросы'
      .search-page__null-result-text = "#{type_name} не найдены"

  - if @search_result.any?
    - if questions_active?
      - @search_result.each_with_index do |question, i|
        a.search-page__item href=question.url
          .search-page__item-title
            == sanitize(question.title)

          - if question.answers_count > 0
            .search-page__text
              b> = "#{question.answers.first.user.first_name}:"
              == sanitize(question.answers.first.body, tags: %i(p img))

            - if question.answers_count == 1
              .search-page__answer 1 ответ

            - if question.answers_count > 1
              - count = question.answers_count - 1
              .search-page__answer = "Еще #{count} #{I18n.t('activemodel.models.qa/answer', count: count)}"
          - else
            .search-page__answer 0 ответов


- if @search_result.any?
  - if tags_active?
    - @search_result.each do |tag|
      .theme.js-tag-share
        .theme__short-stripe
          img src=tag.wide_stripe_url
        .theme__content
          .theme__cover
            img src=tag.thumb_with_shadow_url
          = render 'front/common/social'
          a.theme__title.js-tag-share-title href=tag.url
            == tag.name.truncate(35)

        .theme__footer
          .theme__question
            .theme__icon
              = svg name: 'ico_question_gray', klass: 'theme__icon-svg'
            span.theme__counter._question>
              - count = tag.questions_count
              = "#{count} #{I18n.t('activemodel.models.qa/question', count: count)}"
            .theme__icon
              = svg name: 'ico_message', klass: 'theme__icon-svg'
            span.theme__counter>
              - count = tag.answers_count
              = "#{count} #{I18n.t('activemodel.models.qa/answer', count: count)}"

- if @search_result.any?
  .pagination-wrapper = pagination(@search_result, mobile: true)


- if @search_result.empty?
  - if questions_active?
    - cache_mobile [:fresh_questions], expires_in: 1.minute do
      .js-question-search-ads
      .title Новые вопросы
      - options = { collection: search_facade.fresh_questions, as: :question, cached: mobile_collection_proc }
      = render partial: 'front/questions/question', **options

  - if tags_active?
    - cache_mobile [:most_answered_tags], expires_in: 1.minute do
      .title Популярные темы
      - options = { collection: search_facade.most_answered_tags, as: :tag, cached: mobile_collection_proc }
      = render partial: 'front/tags/tag', **options
